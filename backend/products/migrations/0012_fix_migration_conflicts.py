# Generated by Django fix for migration conflicts

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0011_deliverysettlement_deliverysettlementitem_and_more'),
    ]

    operations = [
        # This migration fixes any lingering constraint issues from the salesman_stock table
        # that was dropped via raw SQL but still had Django model references
        migrations.RunSQL(
            """
            -- Clean up any remaining constraints or references that might cause issues
            -- This is a safety migration to ensure the database is in a clean state
            
            -- Drop any remaining constraints on non-existent tables (ignore errors)
            DO $$ 
            BEGIN 
                -- Check if salesman_stock table still exists and drop constraints
                IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'salesman_stock') THEN
                    DROP TABLE IF EXISTS salesman_stock CASCADE;
                END IF;
                
                -- Check if central_stock table still exists and drop constraints  
                IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'central_stock') THEN
                    DROP TABLE IF EXISTS central_stock CASCADE;
                END IF;
                
                -- Ensure batch_assignments has delivery_id column
                IF NOT EXISTS (
                    SELECT 1 FROM information_schema.columns 
                    WHERE table_name = 'batch_assignments' 
                    AND column_name = 'delivery_id'
                ) THEN
                    ALTER TABLE batch_assignments 
                    ADD COLUMN delivery_id INTEGER REFERENCES deliveries(id) ON DELETE CASCADE;
                END IF;
                
            EXCEPTION WHEN others THEN
                -- Ignore any errors during cleanup
                NULL;
            END $$;
            """,
            reverse_sql="-- This migration cannot be reversed"
        ),
    ]
