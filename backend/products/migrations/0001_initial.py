# Generated by Django 5.0.7 on 2025-07-11 09:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(help_text='User-defined batch number', max_length=100)),
                ('manufacturing_date', models.DateField(help_text='Manufacturing or received date')),
                ('expiry_date', models.DateField(blank=True, help_text='Expiry date for FIFO', null=True)),
                ('initial_quantity', models.PositiveIntegerField(help_text='Initial quantity in this batch')),
                ('current_quantity', models.PositiveIntegerField(help_text='Current available quantity')),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Cost per unit for this batch', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this batch', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('quality_status', models.CharField(choices=[('GOOD', 'Good Quality'), ('WARNING', 'Quality Warning'), ('DEFECTIVE', 'Defective'), ('RECALLED', 'Recalled')], default='GOOD', help_text='Quality status of the batch', max_length=20)),
                ('recall_initiated_at', models.DateTimeField(blank=True, help_text='When recall was initiated', null=True)),
                ('recall_reason', models.TextField(blank=True, help_text='Reason for batch recall')),
                ('total_returned', models.DecimalField(decimal_places=2, default=0, help_text='Total quantity returned', max_digits=10)),
                ('return_rate', models.DecimalField(decimal_places=2, default=0, help_text='Return rate percentage', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_batches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'product_batches',
                'ordering': ['manufacturing_date', 'expiry_date'],
            },
        ),
        migrations.CreateModel(
            name='BatchDefect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defect_type', models.CharField(choices=[('QUALITY', 'Quality Issue'), ('CONTAMINATION', 'Contamination'), ('EXPIRY', 'Premature Expiry'), ('PACKAGING', 'Packaging Defect'), ('OTHER', 'Other Issue')], max_length=50)),
                ('severity', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical - Immediate Recall')], max_length=20)),
                ('description', models.TextField(help_text='Detailed description of the defect')),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True, help_text='Notes on how the defect was resolved')),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defects', to='products.batch')),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_defects', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_defects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'batch_defects',
                'ordering': ['-reported_at'],
            },
        ),
        migrations.CreateModel(
            name='BatchTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('restock', 'Restock'), ('assignment', 'Assignment to Salesman'), ('sale', 'Sale'), ('return', 'Return from Salesman'), ('adjustment', 'Stock Adjustment'), ('expired', 'Expired Stock Removal')], max_length=20)),
                ('quantity', models.IntegerField(help_text='Positive for stock in, negative for stock out')),
                ('balance_after', models.PositiveIntegerField(help_text='Stock balance after this transaction')),
                ('reference_type', models.CharField(blank=True, help_text='Type of reference (delivery, invoice, etc.)', max_length=50)),
                ('reference_id', models.PositiveIntegerField(blank=True, help_text='ID of related record', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='products.batch')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='batch_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'batch_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('delivered', 'Delivered'), ('settled', 'Settled'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('delivery_date', models.DateField()),
                ('settlement_date', models.DateField(blank=True, null=True)),
                ('total_margin_earned', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('settlement_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('salesman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='accounts.salesman')),
            ],
            options={
                'verbose_name_plural': 'Deliveries',
                'db_table': 'deliveries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeliverySettlement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('settlement_date', models.DateField()),
                ('settlement_number', models.CharField(max_length=50, unique=True)),
                ('total_delivered_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_sold_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_returned_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_margin_earned', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_delivered_items', models.PositiveIntegerField(default=0)),
                ('total_sold_items', models.PositiveIntegerField(default=0)),
                ('total_returned_items', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('settlement_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('salesman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_settlements', to='accounts.salesman')),
                ('settled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='settlements_processed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'delivery_settlements',
                'ordering': ['-settlement_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('image_url', models.URLField(blank=True, help_text='Product image URL', null=True)),
                ('base_price', models.DecimalField(decimal_places=2, help_text='MRP - Maximum Retail Price', max_digits=10)),
                ('cost_price', models.DecimalField(decimal_places=2, default=0.0, help_text='Cost price for profit calculation', max_digits=10)),
                ('min_stock_level', models.PositiveIntegerField(default=0)),
                ('unit', models.CharField(default='piece', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='DeliverySettlementItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivered_quantity', models.PositiveIntegerField()),
                ('sold_quantity', models.PositiveIntegerField(default=0)),
                ('returned_quantity', models.PositiveIntegerField(default=0)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('delivered_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sold_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('returned_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('margin_per_unit', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_margin_earned', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='products.deliverysettlement')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'db_table': 'delivery_settlement_items',
            },
        ),
        migrations.CreateModel(
            name='DeliveryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='products.delivery')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'db_table': 'delivery_items',
            },
        ),
        migrations.AddField(
            model_name='batch',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='products.product'),
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('purchase', 'Purchase'), ('sale', 'Sale'), ('allocation', 'Allocation to Salesman'), ('return', 'Return'), ('adjustment', 'Stock Adjustment'), ('damage', 'Damage/Loss')], max_length=20)),
                ('quantity', models.IntegerField()),
                ('reference_id', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='products.product')),
                ('salesman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.salesman')),
            ],
            options={
                'db_table': 'stock_movements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BatchAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='Quantity assigned')),
                ('delivered_quantity', models.PositiveIntegerField(default=0, help_text='Quantity actually delivered')),
                ('returned_quantity', models.PositiveIntegerField(default=0, help_text='Quantity returned')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('delivered', 'Delivered'), ('partial', 'Partially Returned'), ('returned', 'Fully Returned'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('delivery_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='products.batch')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_assignments', to=settings.AUTH_USER_MODEL)),
                ('salesman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_assignments', to='accounts.salesman')),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batch_assignments', to='products.delivery')),
            ],
            options={
                'db_table': 'batch_assignments',
                'ordering': ['-created_at'],
                'unique_together': {('batch', 'delivery', 'salesman')},
            },
        ),
        migrations.AddIndex(
            model_name='deliverysettlement',
            index=models.Index(fields=['salesman', 'settlement_date'], name='delivery_se_salesma_d43bd4_idx'),
        ),
        migrations.AddIndex(
            model_name='deliverysettlement',
            index=models.Index(fields=['settlement_date'], name='delivery_se_settlem_170c0b_idx'),
        ),
        migrations.AddIndex(
            model_name='deliverysettlement',
            index=models.Index(fields=['status'], name='delivery_se_status_666b53_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='deliverysettlement',
            unique_together={('salesman', 'settlement_date')},
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='products_sku_fe2039_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='products_name_6f9890_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='products_categor_4083ff_idx'),
        ),
        migrations.AddIndex(
            model_name='deliverysettlementitem',
            index=models.Index(fields=['settlement', 'product'], name='delivery_se_settlem_fe09c3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='deliverysettlementitem',
            unique_together={('settlement', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='deliveryitem',
            unique_together={('delivery', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='batch',
            unique_together={('product', 'batch_number')},
        ),
    ]
