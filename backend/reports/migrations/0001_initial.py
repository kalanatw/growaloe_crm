# Generated by Django 5.0.7 on 2025-06-01 15:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FinancialReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('profit_loss', 'Profit & Loss'), ('outstanding', 'Outstanding Payments'), ('payment_summary', 'Payment Summary'), ('margin_analysis', 'Margin Analysis')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('report_data', models.JSONField()),
                ('file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.owner')),
                ('salesman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.salesman')),
            ],
            options={
                'db_table': 'financial_reports',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('stock_levels', 'Stock Levels'), ('low_stock', 'Low Stock Items'), ('stock_movements', 'Stock Movements'), ('valuation', 'Inventory Valuation')], max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('report_data', models.JSONField()),
                ('file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'inventory_reports',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='SalesReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('daily', 'Daily Sales'), ('weekly', 'Weekly Sales'), ('monthly', 'Monthly Sales'), ('quarterly', 'Quarterly Sales'), ('yearly', 'Yearly Sales'), ('custom', 'Custom Range')], max_length=20)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV')], default='pdf', max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('report_data', models.JSONField()),
                ('file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('file_size', models.PositiveIntegerField(default=0)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.owner')),
                ('salesman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.salesman')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.shop')),
            ],
            options={
                'db_table': 'sales_reports',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='DashboardMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_sales', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_invoices', models.PositiveIntegerField(default=0)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('outstanding_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('products_sold', models.PositiveIntegerField(default=0)),
                ('low_stock_items', models.PositiveIntegerField(default=0)),
                ('active_salesmen', models.PositiveIntegerField(default=0)),
                ('top_salesman_sales', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('active_shops', models.PositiveIntegerField(default=0)),
                ('shops_with_overdue', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='accounts.owner')),
            ],
            options={
                'db_table': 'dashboard_metrics',
                'ordering': ['-date'],
                'unique_together': {('owner', 'date')},
            },
        ),
    ]
